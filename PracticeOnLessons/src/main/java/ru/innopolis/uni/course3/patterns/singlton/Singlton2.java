package ru.innopolis.uni.course3.patterns.singlton;

/**
 Данная реализация решает проблему многопоточности
 проблему многопоточности мы решили, но потеряли две важные вещи:
 1. Ленивую инициализацию (Объект instance будет создан classloader-ом во время инициализации класса)
 2. Отсутствует возможность обработки исключительных ситуаций(exceptions) во время вызова конструктора.
 Решение подходит для многопоточных приложений, при условии отсутствия опасности возникновения исключительных ситуаций
 в конструкторе и отсутствии необходимости ленивой инициализации.
 + Простая и прозрачная реализация
 + Потокобезопасность
 - Не ленивая инициализация
 */
public class Singlton2 {

    private static final Singlton2 instance = new Singlton2();

    private Singlton2() {
    }

    public static Singlton2 getInstance(){
        return instance;
    }
}
