<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <bean id = "journal_controller" class="ru.innopolis.uni.course3.ofedorova.controllers.JournalController" scope="singleton">
        <constructor-arg ref="dao_journal"/>
    </bean>
    <bean id="dao_journal" class="ru.innopolis.uni.course3.ofedorova.dao.journal.JdbcDAOForJournal" scope="singleton">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="basicDAOForLecture" ref="basic_dao_for_lecture"/>
        <property name="basicDAOForStudent" ref="basic_dao_for_student"/>
        <property name="transactionTemplate">
            <bean class="org.springframework.transaction.support.TransactionTemplate">
                <property name="transactionManager" ref="transactionManager"/>
            </bean>
        </property>
    </bean>

    <bean id = "lecture_controller" class="ru.innopolis.uni.course3.ofedorova.controllers.LectureController"
          scope="singleton"
          p:daoForLecture-ref="dao_lecture"/>
    <bean id="dao_lecture" class="ru.innopolis.uni.course3.ofedorova.dao.lectures.JdbcDAOForLecture" scope="singleton">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="basicDAOForLecture" ref="basic_dao_for_lecture"/>
        <property name="transactionTemplate">
            <bean class="org.springframework.transaction.support.TransactionTemplate">
                <property name="transactionManager" ref="transactionManager"/>
            </bean>
        </property>
    </bean>

    <bean id="students_controller" class="ru.innopolis.uni.course3.ofedorova.controllers.StudentController" scope="singleton">
        <property name="daoForStudent" ref="dao_students"/>
    </bean>
    <bean id="dao_students" class="ru.innopolis.uni.course3.ofedorova.dao.students.JdbcDAOForStudent"  scope="singleton">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="basicDAOForStudent" ref="basic_dao_for_student"/>
    </bean>

    <bean name="basic_dao_for_lecture" class="ru.innopolis.uni.course3.ofedorova.dao.lectures.JdbcBasicDAOForLecture" scope="singleton"
          p:jdbcTemplate-ref="jdbcTemplate"/>
    <bean name="basic_dao_for_student" class="ru.innopolis.uni.course3.ofedorova.dao.students.JdbcBasicDAOForStudent" scope="singleton"
          p:jdbcTemplate-ref="jdbcTemplate"/>

    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate" scope="prototype">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost/is-students" />
        <property name="username" value="postgres" />
        <property name="password" value="123" />
        <property name="initialSize" value="5" />
        <property name="maxActive" value="10" />
        <property name="maxWait" value="10000"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- propagation="REQUIRED" Указывает, что метод должен выполняться внутри транзакции.
            Если к моменту вызова метода будет запущена транзакция, он будет выполняться в рамках этой транзакции.
            В противном случае будет запущена новая транзакция -->
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="edit*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <!-- propagation="SUPPORTS" Указывает, что метод не требует наличия транзакции, но он может выполняться
            внутри имеющейся транзакции -->
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor
                pointcut="execution(* *..JdbcDAOForStudent.*(..))"
                advice-ref="txAdvice"/>
    </aop:config>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="utf-8">
        <!-- one of the properties available; the maximum file size in bytes -->
        <!-- <property name="maxUploadSize" value="40000000" /> -->
    </bean>

</beans>